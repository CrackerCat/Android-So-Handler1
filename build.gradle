// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        maven { url uri("${rootDir}/maven") }
        maven { url uri("${rootDir}/maven-p7z") }
        mavenLocal()
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven { url "https://maven.aliyun.com/repository/google" }
        maven { url "https://maven.aliyun.com/repository/jcenter" }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$ANDROID_GRADLE_VERSION"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.10"
        if (Boolean.parseBoolean(userPlugin)) {
            classpath "${GROUP_ID}:load-hook-plugin:${SO_PLUGIN_VERSION}"
            classpath "${GROUP_ID}:file-plugin:${SO_PLUGIN_VERSION}"
        }
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        maven { url uri("${project.rootProject.rootDir}/maven") }
        mavenLocal()
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven { url "https://maven.aliyun.com/repository/google" }
        maven { url "https://maven.aliyun.com/repository/jcenter" }
        maven { url "https://raw.githubusercontent.com/Android-Mainli/Maven/master" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

subprojects { pro ->
    def name = pro.name
    if (name == 'app' || name == 'testLibrary' || name == 'p7z') {
        return
    }
    apply plugin: 'maven-publish'

    afterEvaluate {
        def isJavaProject = true
        if (name == 'load-assets-7z' || name == 'android-un7z') {
            isJavaProject = false
        }
        afterEvaluate {
            publishing {
                publications {
                    release(MavenPublication) {
                        groupId GROUP_ID
                        artifactId pro.name
                        version SO_PLUGIN_VERSION
                        if (isJavaProject) {
                            from components.java
                        } else {
                            from components.release
                        }
                        if (sourcesJar != null) {
                            artifact(sourcesJar)
                        }
                    }
                }
                repositories {
                    maven {
                        url = file("${rootDir}/maven")
                    }
                }
            }
        }
    }
    task uploadAll { task ->
        task.group = 'upload'
        gradle.projectsEvaluated {
            task.dependsOn project.tasks.clean
            task.dependsOn project.tasks.build

            project.tasks.build.mustRunAfter project.tasks.clean

            project.subprojects {
                if (it.name != 'app') {
                    task.dependsOn it.tasks.publish
                    upload.mustRunAfter project.tasks.build
                }
            }
        }
    }
}